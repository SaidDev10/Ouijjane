name: Docker workflow

on:
  workflow_call:
    inputs:
      PROJECT_MODULE:
        required: true
        type: string
      PROJECT_COMPONENT:
        required: true
        type: string
      PROJECT_SUBPATH:
        required: true
        type: string

jobs:
  docker:
    name: Docker
    runs-on: ubuntu-latest
    
    steps:

      - name: Docker login
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ secrets.GITLAB_REGISTRY }}
          username: ${{ secrets.GITLAB_USERNAME }}
          password: ${{ secrets.GITLAB_PASSWORD }}

      - name: Set parameters
        run: |
          echo "IMAGE_NAME=$(echo ${{ env.PRODUCT }}/${{ inputs.PROJECT_MODULE }}-${{ inputs.PROJECT_COMPONENT }} | tr A-Z a-z)" >> "$GITHUB_ENV"
          echo "MICROSVC=$(echo ${{ inputs.PROJECT_SUBPATH }}.${{ env.PRODUCT }}.${{ inputs.PROJECT_MODULE }}.${{ inputs.PROJECT_COMPONENT }}) >> "$GITHUB_ENV"
          echo "CSPROJ=$(echo ${{ env.PRODUCT }}.${{ inputs.PROJECT_MODULE }}.${{ inputs.PROJECT_COMPONENT }}.csproj" >> "$GITHUB_ENV"
          echo "ASSEMBLY=$(echo ${{ env.PRODUCT }}.${{ inputs.PROJECT_MODULE }}.${{ inputs.PROJECT_COMPONENT }}.dll" >> "$GITHUB_ENV"
          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

      - name: Build image
        run: echo "IMAGE_ID=$(echo $(docker build -f ./src/Dockerfile -t ${IMAGE_NAME}:$GITHUB.REF_NAME-$GITHUB_SHA_SHORT --build-arg ${CSPROJPATH} --build-arg ${ASSEMBLY} --build-arg ${MICROSVC} --build-arg ${CSPROJ} . | awk '/Successfully built/{print $NF}'))"

      - name: Push image
        run: |
          docker tag "${IMAGE_NAME}:$GITHUB.REF_NAME-$GITHUB_SHA_SHORT" "${{ env.GITLAB_REGISTRY }}-test/${IMAGE_NAME}:$GITHUB.REF_NAME-$GITHUB_SHA_SHORT"
          docker push "${{ env.GITLAB_REGISTRY }}-test/${IMAGE_NAME}:$GITHUB.REF_NAME-$GITHUB_SHA_SHORT"
          docker tag ${IMAGE_ID} "${IMAGE_NAME}:$GITHUB.REF_NAME"
          docker tag "${IMAGE_NAME}:$GITHUB.REF_NAME" "${{ env.GITLAB_REGISTRY }}/${IMAGE_NAME}:$GITHUB.REF_NAME"
          docker push "${{ env.GITLAB_REGISTRY }}/${IMAGE_NAME}:$GITHUB.REF_NAME"