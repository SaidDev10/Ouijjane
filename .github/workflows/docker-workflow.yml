name: Docker workflow

on:
  workflow_call:
    inputs:
      PROJECT_MODULE:
        required: true
        type: string
      PROJECT_COMPONENT:
        required: true
        type: string
      PROJECT_SUBPATH:
        required: true
        type: string

jobs:
  docker:
    name: Docker
    runs-on: ubuntu-latest
    
    steps:
    
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: registry.gitlab.com
          username: ${{ secrets.GITLAB_USERNAME }}
          password: ${{ secrets.GITLAB_PASSWORD }}

      - name: Set parameters
        run: |
          echo "IMAGE_NAME=$(echo ${{ vars.PRODUCT }}/${{ inputs.PROJECT_MODULE }}-${{ inputs.PROJECT_COMPONENT }} | tr A-Z a-z)" >> "$GITHUB_ENV"
          echo "MICROSVC=$(echo ${{ inputs.PROJECT_SUBPATH }}${{ vars.PRODUCT }}.${{ inputs.PROJECT_MODULE }}.${{ inputs.PROJECT_COMPONENT }})" >> "$GITHUB_ENV"
          echo "CSPROJ=$(echo ${{ vars.PRODUCT }}.${{ inputs.PROJECT_MODULE }}.${{ inputs.PROJECT_COMPONENT }}.csproj)" >> "$GITHUB_ENV"
          echo "ASSEMBLY=$(echo ${{ vars.PRODUCT }}.${{ inputs.PROJECT_MODULE }}.${{ inputs.PROJECT_COMPONENT }}.dll)" >> "$GITHUB_ENV"
          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

      - name: Build image
        working-directory: ./src/
        run: echo "IMAGE_ID=$(echo $(docker build -t $IMAGE_NAME:${{ GITHUB.REF_NAME }}-$GITHUB_SHA_SHORT --build-arg MICROSVC=${MICROSVC} --build-arg CSPROJ=${CSPROJ} --build-arg ASSEMBLY=${ASSEMBLY} . | awk '/Successfully built/{print $NF}'))"

      - name: Push image
        run: |
          docker tag "$IMAGE_NAME:${{ GITHUB.REF_NAME }}-$GITHUB_SHA_SHORT" "${{ vars.GITLAB_GROUP }}/${{ vars.PRODUCT }}-test/$IMAGE_NAME:${{ GITHUB.REF_NAME }}-$GITHUB_SHA_SHORT"
          docker push "${{ vars.GITLAB_GROUP }}/${{ vars.PRODUCT }}-test/$IMAGE_NAME:${{ GITHUB.REF_NAME }}-$GITHUB_SHA_SHORT"
          docker tag $IMAGE_ID "$IMAGE_NAME:${{ GITHUB.REF_NAME }}"
          docker tag "$IMAGE_NAME:${{ GITHUB.REF_NAME }}" "${{ vars.GITLAB_GROUP }}/${{ vars.PRODUCT }}/$IMAGE_NAME:${{ GITHUB.REF_NAME }}"
          docker push "${{ vars.GITLAB_GROUP }}/${{ vars.PRODUCT }}/$IMAGE_NAME:${{ GITHUB.REF_NAME }}"