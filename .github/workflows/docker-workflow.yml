name: Docker workflow

on:
  workflow_call:
    inputs:
      PROJECT_MODULE:
        required: true
        type: string
      PROJECT_COMPONENT:
        required: true
        type: string
      PROJECT_SUBPATH:
        required: true
        type: string

jobs:
  init:
    name: Initialization
    runs-on: ubuntu-latest
    if: contains(fromJSON('["refs/heads/main", "refs/heads/staging"]'), github.ref)
    outputs:
      IMAGE_NAME: ${{ steps.setParams.outputs.IMAGE_NAME }}
      MICROSVC: ${{ steps.setParams.outputs.MICROSVC }}
      CSPROJ: ${{ steps.setParams.outputs.CSPROJ }}
      ASSEMBLY: ${{ steps.setParams.outputs.ASSEMBLY }}
      GITHUB_SHA_SHORT: ${{ steps.setParams.outputs.GITHUB_SHA_SHORT }}

    steps:
      - name: Set parameters
        id: setParams
        run: |
          echo "IMAGE_NAME=$(echo ${{ inputs.PROJECT_MODULE }}-${{ inputs.PROJECT_COMPONENT }} | tr A-Z a-z)" >> "$GITHUB_OUTPUT"
          echo "MICROSVC=$(echo ${{ inputs.PROJECT_SUBPATH }}${{ vars.PRODUCT }}.${{ inputs.PROJECT_MODULE }}.${{ inputs.PROJECT_COMPONENT }})" >> "$GITHUB_OUTPUT"
          echo "CSPROJ=$(echo ${{ vars.PRODUCT }}.${{ inputs.PROJECT_MODULE }}.${{ inputs.PROJECT_COMPONENT }}.csproj)" >> "$GITHUB_OUTPUT"
          echo "ASSEMBLY=$(echo ${{ vars.PRODUCT }}.${{ inputs.PROJECT_MODULE }}.${{ inputs.PROJECT_COMPONENT }}.dll)" >> "$GITHUB_OUTPUT"
          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_OUTPUT
        
  docker:
    name: Build image
    runs-on: ubuntu-latest
    needs: init
    env:
      IMAGE_NAME: ${{needs.init.outputs.IMAGE_NAME}}
      MICROSVC: ${{needs.init.outputs.MICROSVC}}
      CSPROJ: ${{needs.init.outputs.CSPROJ}}
      ASSEMBLY: ${{needs.init.outputs.ASSEMBLY}}
      GITHUB_SHA_SHORT: ${{needs.init.outputs.GITHUB_SHA_SHORT}}

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: registry.gitlab.com
          username: ${{ secrets.GITLAB_USERNAME }}
          password: ${{ secrets.GITLAB_PASSWORD }}

      - name: Build image
        working-directory: ./src/
        run: docker build -t $IMAGE_NAME:${{ GITHUB.REF_NAME }}-$GITHUB_SHA_SHORT --build-arg MICROSVC=${MICROSVC} --build-arg CSPROJ=${CSPROJ} --build-arg ASSEMBLY=${ASSEMBLY} .

      - name: Push image
        run: |
          docker tag "$IMAGE_NAME:${{ GITHUB.REF_NAME }}-$GITHUB_SHA_SHORT" "${{ vars.GITLAB_GROUP }}-test/$IMAGE_NAME:${{ GITHUB.REF_NAME }}-$GITHUB_SHA_SHORT"
          docker push "${{ vars.GITLAB_GROUP }}-test/$IMAGE_NAME:${{ GITHUB.REF_NAME }}-$GITHUB_SHA_SHORT"
    
  staging:
    name: Push image to staging
    runs-on: ubuntu-latest
    needs: [init, docker]
    if: github.event.inputs.build_images == 'true' && (contains(fromJSON('["refs/heads/staging"]'), github.ref)
    env:
      IMAGE_NAME: ${{needs.init.outputs.IMAGE_NAME}}
      MICROSVC: ${{needs.init.outputs.MICROSVC}}
      CSPROJ: ${{needs.init.outputs.CSPROJ}}
      ASSEMBLY: ${{needs.init.outputs.ASSEMBLY}}
      GITHUB_SHA_SHORT: ${{needs.init.outputs.GITHUB_SHA_SHORT}}
          
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: registry.gitlab.com
          username: ${{ secrets.GITLAB_USERNAME }}
          password: ${{ secrets.GITLAB_PASSWORD }}
      
      - name: Push image
        run: |
          docker pull "${{ vars.GITLAB_GROUP }}-test/$IMAGE_NAME:${{ GITHUB.REF_NAME }}-$GITHUB_SHA_SHORT"
          docker tag "${{ vars.GITLAB_GROUP }}-test/$IMAGE_NAME:${{ GITHUB.REF_NAME }}-$GITHUB_SHA_SHORT" "${{ vars.GITLAB_GROUP }}-staging/$IMAGE_NAME:${{ GITHUB.REF_NAME }}-$GITHUB_SHA_SHORT"
          docker push "${{ vars.GITLAB_GROUP }}-staging/$IMAGE_NAME:${{ GITHUB.REF_NAME }}-$GITHUB_SHA_SHORT"
    
  production:
    name: Push image to production
    runs-on: ubuntu-latest
    needs: [init, docker, staging]
    if: github.event.inputs.build_images == 'true' && github.ref_type == 'tag' && contains(fromJSON('["refs/heads/main"]'), github.ref)
    env:
      IMAGE_NAME: ${{needs.init.outputs.IMAGE_NAME}}
      MICROSVC: ${{needs.init.outputs.MICROSVC}}
      CSPROJ: ${{needs.init.outputs.CSPROJ}}
      ASSEMBLY: ${{needs.init.outputs.ASSEMBLY}}
      GITHUB_SHA_SHORT: ${{needs.init.outputs.GITHUB_SHA_SHORT}}
          
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: registry.gitlab.com
          username: ${{ secrets.GITLAB_USERNAME }}
          password: ${{ secrets.GITLAB_PASSWORD }}
      
      - name: Push image
        run: |
          docker pull "${{ vars.GITLAB_GROUP }}-staging/$IMAGE_NAME:${{ GITHUB.REF_NAME }}-$GITHUB_SHA_SHORT"
          docker tag "${{ vars.GITLAB_GROUP }}-staging/$IMAGE_NAME:${{ GITHUB.REF_NAME }}-$GITHUB_SHA_SHORT" "${{ vars.GITLAB_GROUP }}/$IMAGE_NAME:release-${{ GITHUB.REF_NAME }}-$GITHUB_SHA_SHORT"
          docker push "${{ vars.GITLAB_GROUP }}/$IMAGE_NAME:release-${{ GITHUB.REF_NAME }}-$GITHUB_SHA_SHORT"